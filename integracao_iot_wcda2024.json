[
    {
        "id": "3c907fa3f9f37479",
        "type": "tab",
        "label": "Integração IoT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "51bc6fe91d0818d8",
        "type": "group",
        "z": "3c907fa3f9f37479",
        "name": "Consulta ao banco",
        "style": {
            "label": true
        },
        "nodes": [
            "016e5538aea00dbb",
            "b0d31c2c8a50a8ea",
            "2430ef3e2e44223c"
        ],
        "x": -6,
        "y": 399,
        "w": 612,
        "h": 82
    },
    {
        "id": "57927dd28acf7eb9",
        "type": "group",
        "z": "3c907fa3f9f37479",
        "name": "Simulação do dispositivo de IoT",
        "style": {
            "stroke": "#ff0000",
            "label": true
        },
        "nodes": [
            "7be2edf6c4dcf2fc",
            "41fd82cadd8e5a51",
            "688b09457fc64428"
        ],
        "x": 34,
        "y": 279,
        "w": 632,
        "h": 82
    },
    {
        "id": "2c191fe67a046ca0",
        "type": "group",
        "z": "3c907fa3f9f37479",
        "name": "Broker MQTT + Integração com Banco SQL",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "8e4234e731cce0b8",
            "1a1b6af48646ff34",
            "69f10ab6f0d6d354",
            "a0d8290b1d13ff85",
            "be92216b1f858a76"
        ],
        "x": 34,
        "y": 39,
        "w": 712,
        "h": 182
    },
    {
        "id": "8e4234e731cce0b8",
        "type": "mqtt in",
        "z": "3c907fa3f9f37479",
        "g": "2c191fe67a046ca0",
        "name": "",
        "topic": "dados",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ff3a4c5bf5aa1f3d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "69f10ab6f0d6d354"
            ]
        ]
    },
    {
        "id": "1a1b6af48646ff34",
        "type": "aedes broker",
        "z": "3c907fa3f9f37479",
        "g": "2c191fe67a046ca0",
        "name": "",
        "mqtt_port": "1885",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 150,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "69f10ab6f0d6d354",
        "type": "function",
        "z": "3c907fa3f9f37479",
        "g": "2c191fe67a046ca0",
        "name": "Estruturacao_dados",
        "func": "let dt = msg.payload.datetime;  // Extraído diretamente do JSON\nlet tensao = msg.payload.tensao;\nlet temperatura = msg.payload.temperatura;\nlet umidade = msg.payload.umidade;\nlet luminosidade = msg.payload.luminosidade;\n\n// Estruturar o novo payload\n//msg.topic = \"INSERT INTO sensor_data (datetime, tensao, temperatura, umidade, luminosidade) VALUES ($1, $2, $3, $4, $5)\";\nmsg.params = [dt, tensao, temperatura, umidade, luminosidade];\n\n// Estruturar o payload original para rastreio\nmsg.originalPayload = {\n    dt: dt,\n    tensao: tensao,\n    temperatura: temperatura,\n    umidade: umidade,\n    luminosidade: luminosidade\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "a0d8290b1d13ff85",
                "be92216b1f858a76"
            ]
        ]
    },
    {
        "id": "a0d8290b1d13ff85",
        "type": "debug",
        "z": "3c907fa3f9f37479",
        "g": "2c191fe67a046ca0",
        "name": "debug 94",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 120,
        "wires": []
    },
    {
        "id": "016e5538aea00dbb",
        "type": "inject",
        "z": "3c907fa3f9f37479",
        "g": "51bc6fe91d0818d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "b0d31c2c8a50a8ea"
            ]
        ]
    },
    {
        "id": "b0d31c2c8a50a8ea",
        "type": "postgresql",
        "z": "3c907fa3f9f37479",
        "g": "51bc6fe91d0818d8",
        "name": "",
        "query": "SELECT * FROM sep.dados;",
        "postgreSQLConfig": "38f517e2df76f71e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "2430ef3e2e44223c"
            ]
        ]
    },
    {
        "id": "2430ef3e2e44223c",
        "type": "debug",
        "z": "3c907fa3f9f37479",
        "g": "51bc6fe91d0818d8",
        "name": "debug 95",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "be92216b1f858a76",
        "type": "postgresql",
        "z": "3c907fa3f9f37479",
        "g": "2c191fe67a046ca0",
        "name": "",
        "query": "INSERT INTO sep.dados (dt, tensao, temperatura, umidade,luminosidade) VALUES ($1, $2, $3, $4, $5)",
        "postgreSQLConfig": "38f517e2df76f71e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7be2edf6c4dcf2fc",
        "type": "inject",
        "z": "3c907fa3f9f37479",
        "g": "57927dd28acf7eb9",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "688b09457fc64428"
            ]
        ]
    },
    {
        "id": "41fd82cadd8e5a51",
        "type": "mqtt out",
        "z": "3c907fa3f9f37479",
        "g": "57927dd28acf7eb9",
        "name": "",
        "topic": "dados",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ff3a4c5bf5aa1f3d",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "688b09457fc64428",
        "type": "function",
        "z": "3c907fa3f9f37479",
        "g": "57927dd28acf7eb9",
        "name": "Simulador de device IoT",
        "func": "// Gerar valores aleatórios\nlet tensao = (Math.random() * (5 - 4) + 4).toFixed(2); // 4.00 a 5.00 V\nlet temperatura = (Math.random() * (25 - 20) + 20).toFixed(2); // 20.00 a 25.00 ºC\nlet umidade = Math.floor(Math.random() * (100 - 70 + 1)) + 70; // 70% a 100%\nlet luminosidade = Math.floor(Math.random() * (1000 - 500 + 1)) + 500; // 500 a 1000\n\n// Obter o horário local\nlet now = new Date();\nlet datetime = new Date(now.getTime() - now.getTimezoneOffset() * 60000).toISOString().replace('T', ' ').slice(0, 19); // Formato YYYY-MM-DD HH:MM:SS\n\n// Construir o JSON\nmsg.payload = {\n    datetime: datetime,\n    tensao: parseFloat(tensao),\n    temperatura: parseFloat(temperatura),\n    umidade: umidade,\n    luminosidade: luminosidade\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "41fd82cadd8e5a51"
            ]
        ]
    },
    {
        "id": "ff3a4c5bf5aa1f3d",
        "type": "mqtt-broker",
        "name": "SEP",
        "broker": "192.168.1.16",
        "port": "1885",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "38f517e2df76f71e",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "12345",
        "passwordFieldType": "str"
    }
]